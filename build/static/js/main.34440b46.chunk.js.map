{"version":3,"sources":["components/DThree/Persistence.worker.js","components/DThree/Eigenvector.jsx","components/References/References.jsx","components/References/References3DNA.jsx","components/DThree/DThree.jsx","components/TetramerReader/TetramerReader.jsx","reportWebVitals.js","index.js"],"names":["Worker_fn","Worker","__webpack_public_path__","Eigenvector","values","this","props","vector","pair1","slice","pho1","step","pho2","pair2","style","margin","map","element","toFixed","Component","stepM","numeric","identity","Qhalf","bseq","bvalues","frames","bases","parseBases","i","result","forEach","letter","lines","split","atoms","j","length","atom","name","charAt","x","parseFloat","substring","y","z","push","calculateFrame","ic","isphosphate","uscale","u","v","mul","uvec","sub","transpose","v1","dot","upuu","add","Q","uhalf","Math","sqrt","q","jeigen","a","ip","iq","theta","tau","t","sm","s","h","g","c","vt1","vt2","b","d","abs","eigenvectors","eigenvalues","console","log","complement","rna","undefined","clone","vec","get30Coordinates","saveState","Ai","A","bfra","crick","watson","phoC","crick2","watson2","phoW","strW1","strW2","strC1","strC2","W1","W2","C1","C2","P1","P2","ldict","current","bletters","ref","set","toAdd","toPush","valx","valy","valz","getAtomSets","letters","getMidBasis","numN","val","N","str","numN2","getMidFrame","scale","t1","t2","t3","th","r2","PI","tan","writePDB","data","line","Object","keys","key","index","res","resname","pairingParameters1","pairingParameters2","stepParameters","calculatetp","cosgamma","gamma","phi","omega","sgcp","cm","sp","cp","sg","cg","M","acos","atan2","sin","cos","calculateM","tp","centroid","translate","points","superposition","fixed","moved","cena","cenb","cb_tmp","corr","svd","U","u_trans","vt","V","vt_orig","rot_notrans","rot","det","trans","fitFrames","rW1","rW2","rC1","rC2","setColumn","matrix","col","getBasePlanes","ref1","ref2","temp","temp2","y2","z1","z2","test","testsvd","pairingParameters","inv","Mtest","getParameters","DThree","onMouseMove","clientX","clientY","state","isDragging","setState","translateX","startX","lastTranslateX","translateY","startY","lastTranslateY","persistenceLength","processing","worker","PersistenceWorker","postMessage","addEventListener","e","P","args","alert","onMouseUp","mount","removeEventListener","onMouseDown","inputChanged","event","target","value","type","checked","isNaN","moveEigen","stepBy","evalue","parseInt","modeNum","showIC","useScale","numSamples","parameters3","midVal","mean","cov","tetramer","eigenlist","pdbText","scene","camera","renderer","eigen","demo","PhoW","PhoC","ref3","midframe","px","py","pz","pw","pc","onMouseDdown","item","sort","modeN","document","body","backgroundColor","trois","background","setSize","appendChild","domElement","zoom","avgx","avgy","avgz","spheres","geometry","color","pxx","pyy","pzz","material","sphere","position","light1","light2","lookAt","dir","animate","requestAnimationFrame","render","valtitles","val3titles","meanvals","className","onChange","disabled","onClick","border","width","height","justifyContent","textAlign","TetramerReader","engage","engaged","clicked","analyzeData","loadSet","f1","f2","itemsT","covarianceT","meanT","field","selected","fetch","then","r","text","litems","steps","lastitem","includes","row","items","covariance","loaded","forceUpdate","makePlot","names","useData","check1","check2","check3","check4","min","max","xvalues","yvalues","max_diff","plotItem","analysisC","analysis","mode","marker","size","dtick","layout","title","font","xaxis","range","showgrid","showline","gridwidth","gridcolor","automargin","linewidth","yaxis","clearData","currentAnalysis","currentAnalysisC","count","count2","dataSet","dataSet2","sumTwist","sumTwist2","dataItem","covT","eig","prod","id","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34440b46.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/Persistence.worker.d03194b3.worker.js\");\n}\n","\nimport {Component} from 'react';\n\nclass Eigenvector extends Component {\n\n\trender() {\n\t\t//console.log(this.props.vector);\n\t\tlet values = {};\n\t\tif (this.props.vector) { \n\t\t\tvalues = {\n                pair1: this.props.vector.slice(0, 6),\n                pho1: this.props.vector.slice(6, 12),\n                step: this.props.vector.slice(12, 18),\n                pho2: this.props.vector.slice(18, 24),\n                pair2: this.props.vector.slice(24, 30),\n            };\n        }\n\t\treturn (\n\t<><b>Eigenvector (linear combination, norm = 1)</b>\n\t<table style={{margin:\"auto\"}}><tbody>\n\t<tr>\n\t<td>Pair 1</td>\n\t{values.pair1.map((element) => (<td key={element}>{element.toFixed(7)}</td>))}\n\t</tr><tr>\n\t<td>Pho 1</td>\n\t{values.pho1.map((element) => (<td key={element}>{element.toFixed(7)}</td>))}\n\t</tr><tr>\n        <td>PairStep</td>\n        {values.step.map((element) => (<td key={element}>{element.toFixed(7)}</td>))}\n\t</tr><tr>\n        <td>Pho 2</td>\n        {values.pho2.map((element) => (<td key={element}>{element.toFixed(7)}</td>))}\n\t</tr><tr>\n        <td>Pair 2</td>\n        {values.pair2.map((element) => (<td key={element}>{element.toFixed(7)}</td>))}\n\t</tr>\n\t</tbody></table></>\n\t\t);\n\n\t}\n\n}\n\n//{\"Norm = \" + Math.sqrt(this.props.vector.reduce((acc, value) => acc+value**2,0))}\nexport default Eigenvector;\n\n","import numeric from 'numeric';\n\nlet stepM = numeric.identity(4);\nlet Qhalf = numeric.identity(4);\nlet bseq = [];\nlet bvalues = [];\nlet frames = [];\nlet bpstep = [];\n\nexport const bases = [\n        \"SEQRES   1 A    1  A\\n\" +\n                \"ATOM      1  C1'   A A   1      -2.479   5.346   0.000\\n\" +\n                \"ATOM      2  N9    A A   1      -1.291   4.498   0.000\\n\" +\n                \"ATOM      3  C8    A A   1       0.024   4.897   0.000\\n\" +\n                \"ATOM      4  N7    A A   1       0.877   3.902   0.000\\n\" +\n                \"ATOM      5  C5    A A   1       0.071   2.771   0.000\\n\" +\n                \"ATOM      6  C6    A A   1       0.369   1.398   0.000\\n\" +\n                \"ATOM      7  N6    A A   1       1.611   0.909   0.000\\n\" +\n                \"ATOM      8  N1    A A   1      -0.668   0.532   0.000\\n\" +\n                \"ATOM      9  C2    A A   1      -1.912   1.023   0.000\\n\" +\n                \"ATOM     10  N3    A A   1      -2.320   2.290   0.000\\n\" +\n                \"ATOM     11  C4    A A   1      -1.267   3.124   0.000\\n\" +\n                \"END\",\n        \"SEQRES   1 A    1  G\\n\" +\n                \"ATOM      1  C1'   G A   1      -2.477   5.399   0.000\\n\" +\n                \"ATOM      2  N9    G A   1      -1.289   4.551   0.000\\n\" +\n                \"ATOM      3  C8    G A   1       0.023   4.962   0.000\\n\" +\n                \"ATOM      4  N7    G A   1       0.870   3.969   0.000\\n\" +\n                \"ATOM      5  C5    G A   1       0.071   2.833   0.000\\n\" +\n                \"ATOM      6  C6    G A   1       0.424   1.460   0.000\\n\" +\n                \"ATOM      7  O6    G A   1       1.554   0.955   0.000\\n\" +\n                \"ATOM      8  N1    G A   1      -0.700   0.641   0.000\\n\" +\n                \"ATOM      9  C2    G A   1      -1.999   1.087   0.000\\n\" +\n                \"ATOM     10  N2    G A   1      -2.949   0.139  -0.001\\n\" +\n                \"ATOM     11  N3    G A   1      -2.342   2.364   0.001\\n\" +\n                \"ATOM     12  C4    G A   1      -1.265   3.177   0.000\\n\" +\n                \"END\",\n        \"SEQRES   1 A    1  T\\n\" +\n                \"ATOM      1  C1'   T A   1      -2.481   5.354   0.000\\n\" +\n                \"ATOM      2  N1    T A   1      -1.284   4.500   0.000\\n\" +\n                \"ATOM      3  C2    T A   1      -1.462   3.135   0.000\\n\" +\n                \"ATOM      4  O2    T A   1      -2.562   2.608   0.000\\n\" +\n                \"ATOM      5  N3    T A   1      -0.298   2.407   0.000\\n\" +\n                \"ATOM      6  C4    T A   1       0.994   2.897   0.000\\n\" +\n                \"ATOM      7  O4    T A   1       1.944   2.119   0.000\\n\" +\n                \"ATOM      8  C5    T A   1       1.106   4.338   0.000\\n\" +\n                \"ATOM      9  C7    T A   1       2.466   4.961   0.001\\n\" +\n                \"ATOM     10  C6    T A   1      -0.024   5.057   0.000\\n\" +\n                \"END\",\n        \"SEQRES   1 A    1  C\\n\" +\n                \"ATOM      1  C1'   C A   1      -2.477   5.402   0.000\\n\" +\n                \"ATOM      2  N1    C A   1      -1.287   4.523   0.000\\n\" +\n                \"ATOM      3  C2    C A   1      -1.477   3.143   0.000\\n\" +\n                \"ATOM      4  O2    C A   1      -2.623   2.684   0.001\\n\" +\n                \"ATOM      5  N3    C A   1      -0.385   2.335   0.000\\n\" +\n                \"ATOM      6  C4    C A   1       0.849   2.855   0.000\\n\" +\n                \"ATOM      7  N4    C A   1       1.883   2.020   0.001\\n\" +\n                \"ATOM      8  C5    C A   1       1.065   4.271   0.000\\n\" +\n                \"ATOM      9  C6    C A   1      -0.038   5.062   0.000\\n\" +\n                \"END\",\n        \"SEQRES   1 A    1  A\\n\" +\n\t\t        \"ATOM      1  O3'   A A   1       0.000  -0.929  -1.315\\n\" +\n                \"ATOM      2  P     A A   1       0.000   0.000   0.000\\n\" +\n                \"ATOM      3  OP1   A A   1      -1.208   0.854  -0.000\\n\" +\n                \"ATOM      4  OP2   A A   1       1.208   0.854   0.000\\n\" +\n                \"ATOM      5  O5'   A A   1       0.000  -0.930   1.315\\n\" +\n                \"END\"\n];\n\n// random number (Gaussian) generator values - extra gaussian number\nlet iset = 0;\nlet gset = 0;\n\nexport function randg() {\n\n  let v1, v2, fac, rsq;\n\n  if (iset === 0) {\n    do {\n      v1 = 2.0*Math.random() - 1.0;\n      v2 = 2.0*Math.random() - 1.0;\n      rsq = v1*v1+v2*v2;\n    } while ((rsq >= 1.0) || (rsq === 0));\n    fac = Math.sqrt(-2.0*Math.log(rsq)/rsq);\n    gset = v1*fac;\n    iset = 1;\n    return v2*fac;\n  } else {\n    iset = 0;\n    return gset;\n  }\n}\n\nexport function parseBases() {\n  let letters = [\"A\", \"G\", \"T\", \"C\", \"pho\"];\n  let i = 0;\n  let result = {};\n  letters.forEach((letter) => {\n    let lines = bases[i].split(\"\\n\");\n    let atoms = [];\n    for (let j = 1; j < lines.length-1; j++) {\n      let atom = {};\n      atom.name = lines[j].charAt(13) + (lines[j].charAt(14) !== ' ' ? lines[j].charAt(14): '') + (lines[j].charAt(15) !== ' ' ? lines[j].charAt(15): '');\n      atom.x = parseFloat(lines[j].substring(30, 38));\n      atom.y = parseFloat(lines[j].substring(38, 46));\n      atom.z = parseFloat(lines[j].substring(46, 54));\n      atoms.push(atom);\n    }\n    i++;\n    result[letter] = atoms;\n  });\n\n  return result;\n}\n\nexport const phoRot = [[0.28880532, -0.40811277, -0.8659639, 0.0],\n                       [-0.50008344, 0.70707284, -0.50010651, 0.0],\n                       [0.81639941, 0.57748763, 0.0, 0.0],\n                       [0.0, 0.0, 0.0, 1.0]];\n\nfunction calculateFrame(ic, isphosphate = false) {\n  let uscale = 5.0;\n  let u = [[ic[0], ic[1], ic[2]]];\n  let v = [[ic[3], ic[4], ic[5]]];\n  // scale the coordinates\n  u = numeric.mul(u, 0.5/uscale);\n  // calculate skew-symmetric matrix related to u\n  let uvec = numeric.identity(3);\n  uvec[0][0] = 0.0;  uvec[1][1] = 0.0; uvec[2][2] = 0.0;\n  uvec[0][1] = -u[0][2]; uvec[0][2] = u[0][1]; uvec[1][2] = -u[0][0];\n  uvec = numeric.sub(uvec, numeric.transpose(uvec));\n\n  let v1 = numeric.dot(u, numeric.transpose(u))[0][0];\n\n  let upuu = numeric.add(uvec, numeric.dot(uvec, uvec));\n\n  upuu = numeric.mul(upuu, 2.0/(1.0 + v1));\n  // calculate the rotation matrix that goes with u\n  let Q = numeric.add(numeric.identity(3), upuu);\n\n  // assign it as the 3x3 result portion of 4x4 SE(3) matrix\n  let result = numeric.identity(4);\n  for (let i = 0; i < 3; i++) for (let j = 0; j < 3; j++) result[i][j] = Q[i][j];\n\n  let uhalf = numeric.mul(u, uscale*(2.0/(1.0+Math.sqrt(1.0 + numeric.dot(u, numeric.transpose(u))[0][0]))));\n  u = numeric.mul(uhalf, 0.5/uscale);\n\n  uvec = numeric.identity(3);\n  uvec[0][0] = 0.0;  uvec[1][1] = 0.0; uvec[2][2] = 0.0;\n  uvec[0][1] = -u[0][2]; uvec[0][2] = u[0][1]; uvec[1][2] = -u[0][0];\n  uvec = numeric.sub(uvec, numeric.transpose(uvec));\n\n  v1 = numeric.dot(u, numeric.transpose(u))[0][0];\n\n  upuu = numeric.add(uvec, numeric.dot(uvec, uvec));\n  Qhalf = numeric.add(numeric.identity(3), numeric.mul(upuu, 2.0/(1.0+v1)));\n\n  if (isphosphate) {\n\n    result[0][3] = v[0][0];\n    result[1][3] = v[0][1];\n    result[2][3] = v[0][2];\n\n    return result;\n\n  }\n\n  let q = numeric.dot(Qhalf, numeric.transpose(v));\n  \n  result[0][3] = q[0][0]; \n  result[1][3] = q[1][0]; \n  result[2][3] = q[2][0];\n\n  return result;\n\n}\n\n\nexport function calculateQhalf(fra) {\n    let uscale = 5.0;\n    let trace = fra[0][0]+fra[1][1]+fra[2][2];\n//    let q = [[fra[0][3]], [fra[1][3]], [fra[2][3]]];\n    let a = [[fra[2][1]-fra[1][2]], [fra[0][2]-fra[2][0]], [fra[1][0]-fra[0][1]]];\n    let u = numeric.mul(a, uscale*(2.0/(trace+1.0)));\n    u = numeric.mul(u, 0.5/uscale);\n    let v1 = numeric.dot(numeric.transpose(u), u)[0];\n    let uhalf = numeric.mul(u, uscale*2.0/(1.0+Math.sqrt(1.0+v1)));\n    u = numeric.mul(uhalf, 0.5/uscale);\n    let uvec = numeric.identity(3);\n    uvec[0][0] = 0.0;  uvec[1][1] = 0.0; uvec[2][2] = 0.0;\n    uvec[0][1] = -u[0][2]; uvec[0][2] = u[0][1]; uvec[1][2] = -u[0][0];\n    uvec = numeric.sub(uvec, numeric.transpose(uvec));\n\n    v1 = numeric.dot(numeric.transpose(u), u)[0];\n    let upuu = numeric.add(uvec, numeric.dot(uvec, uvec));\n\n    return numeric.add(numeric.identity(3), numeric.mul(upuu, 2.0/(1.0+v1)));\n}\n\n\nexport function jeigen(a) {\n\n  if (a.length !== a[0].length) return null;\n\n  let ip, iq, i, j;\n  let tresh, theta, tau, t, sm, s, h, g, c;\n\n  let x = [];\n  let v = [];\n  //let v = a.slice();\n  for (i = 0; i < a.length; i++) {\n    let vt1 = [];\n    let vt2 = [];\n    for (j = 0; j < a.length; j++) {\n      if (i === j) vt1.push(1.0); else vt1.push(0.0);\n      vt2.push(a[i][j]);\n    }\n    x.push(vt2);\n    v.push(vt1);\n  }\n  //let x = numeric.eye(a.length);\n\n  let b = [];\n  let z = [];\n  let d = [];\n  for (i = 0; i < a.length; i++) {\n    b.push(0.0);\n    z.push(0.0);\n    d.push(0.0);\n  }\n\n  tresh = 0.0;\n\n  for (ip = 0; ip < a.length; ip++) {\n    d[ip]=x[ip][ip]\n    b[ip]=d[ip];\n    z[ip]=0.0;\n  }\n\n  for (i = 0; i < 500; i++) {\n\n    sm = 0.0;\n    for(ip=0; ip < a.length-1; ip++)\n      for (iq=ip+1; iq < a.length; iq++) sm += Math.abs(x[ip][iq]);\n    if (sm === 0.0) {\n       let result = {eigenvectors: v, eigenvalues: d};\n       return result;\n    }\n\n    for (ip = 0; ip < a.length-1; ip++) {\n      for (iq = ip+1; iq < a.length; iq++) {\n        g = 100.0*Math.abs(x[ip][iq]);\n        if (Math.abs(x[ip][iq]) > tresh) {\n\n          h = d[iq]-d[ip];\n\n          if ((Math.abs(h)+g) === Math.abs(h)) {\n\t      if (h !== 0.0)\n  \t        t = (x[ip][iq])/h;\n          else t = 0.0;\n\t      } else {\n            if (x[ip][iq] !== 0.0) theta = 0.5*h/x[ip][iq];\n\t        else theta = 0.0;\n            t = 1.0/(Math.abs(theta)+Math.sqrt(1.0+theta*theta));\n            if (theta < 0.0) t = -t;\n\t      }\n\n          c = 1.0/Math.sqrt(1.0+t*t);\n          s = t*c;\n          tau = s/(1.0+c);\n          h = t*x[ip][iq];\n          z[ip] -= h;\n          z[iq] += h;\n          d[ip] -= h;\n          d[iq] += h;\n\n          x[ip][iq] = 0.0;\n\t  \t  for (j = 0; j <= ip-1; j++) {\n            g=x[j][ip];\n            h=x[j][iq];\n            x[j][ip]=g-s*(h+g*tau);\n            x[j][iq]=h+s*(g-h*tau);\n\t  \t  }\n          for (j = ip+1; j <= iq-1; j++) {\n            g=x[ip][j];\n            h=x[j][iq];\n            x[ip][j]=g-s*(h+g*tau);\n            x[j][iq]=h+s*(g-h*tau);\n          }\n          for (j = iq+1; j < a.length; j++) {\n            g=x[ip][j];\n            h=x[iq][j];\n            x[ip][j]=g-s*(h+g*tau);\n            x[iq][j]=h+s*(g-h*tau);\n\t      }\n          for (j = 0; j < a.length; j++) {\n\t        g=v[j][ip];\n            h=v[j][iq];\n            v[j][ip]=g-s*(h+g*tau);\n            v[j][iq]=h+s*(g-h*tau);\n\t      }\n\n        }\n      }\n      }\n      for (ip=0; ip < a.length; ip++) {\n\t    b[ip] += z[ip];\n        d[ip] = b[ip];\n\t    z[ip] = 0.0;\n      }\n  }\n\n  console.log(\"could not solve eigenvectors of matrix in 500 iterations\");\n  return null;\n\n}\n\n\nexport function complement(s, rna = false) {\n    let result = \"\";\n    if (s.charAt(1) === 'C')  result = \"G\";\n    if (s.charAt(1) === 'T' || s.charAt(1) === 'U') result = \"A\";\n    if (s.charAt(1) === 'G')  result = \"C\";\n    if (s.charAt(1) === 'A') {\n      if (rna === undefined || rna === false) result = \"T\"; else result = 'U';\n    }\n    if (s.charAt(0) === 'C')  result += \"G\";\n    if (s.charAt(0) === 'T' || s.charAt(0) === 'U') result += \"A\";\n    if (s.charAt(0) === 'G')  result += \"C\";\n    if (s.charAt(0) === 'A') {\n        if (rna === undefined || rna === false) result += \"T\";\n        else result += \"U\";\n    }\n    return result;\n}\n\n// copy 2D array\nfunction clone(vec) {\n\tlet result = [];\n\tresult.length = vec.length;\n\tfor (let i = 0; i < vec.length; i++) {\n\t  result[i] = [];\n\t  result[i].length = vec[i].length;\n\t  for (let j = 0; j < vec[i].length; j++) {\n\t    result[i][j] = vec[i][j];\n\t  }\n\t}\n\treturn result;\n}\n\nexport function get30Coordinates(ic, step, saveState = false, Ai = null) {\n\n\tlet A = numeric.identity(4);\n    if (Ai !== null) A = Ai;\n\n\tif (saveState) frames = [];\n\t\n\t\n\t// first base pair\n    let bfra = calculateFrame(ic.slice(0, 6));\n   // if (saveState) console.log(JSON.stringify(bfra));\n\n    bfra[0][3] = -ic[3] / 2.0;\n    bfra[1][3] = -ic[4] / 2.0;\n    bfra[2][3] = -ic[5] / 2.0;\n    Qhalf = numeric.transpose(Qhalf);\n    for (let i = 0; i < 3; i++) for (let j = 0; j < 3; j++) {\n      bfra[i][j] = Qhalf[i][j];\n    }\n    // bfra is now in the middle\n\n    let crick = numeric.dot(A, bfra)\n    let watson = numeric.dot(crick, calculateFrame(ic.slice(0, 6)));\n    crick[0][1] *= -1; crick[1][1] *= -1; crick[2][1] *= -1; crick[0][2] *= -1; crick[1][2] *= -1; crick[2][2] *= -1;\n    if (saveState) {\n    \tframes.push(watson);\n    \tframes.push(crick);\n\t}\n\n    // send true to calculateFrame to use phosphate coordinates\n    // crick 1 phosphate\n    let phoC = numeric.dot(crick, calculateFrame(ic.slice(6, 12), true));\n    if (saveState) frames.push(phoC);\n\n    // let's get the middle frame and save the bp 2 frame\n    if (saveState) {\n      stepM = numeric.add(calculateFrame(ic.slice(12, 18)), numeric.identity(4));\n      for (let i = 0; i < 3; i++) for (let j = 0; j < 3; j++) {\n        stepM[i][j] = Qhalf[i][j];\n      }\n      stepM[0][3] = stepM[0][3] / 2.0;\n      stepM[1][3] = stepM[1][3] / 2.0;\n      stepM[2][3] = stepM[2][3] / 2.0;\n      frames.push(numeric.dot(A, calculateFrame(ic.slice(12, 18))));\n    }\n    \n    // base-pair step jump\n    A = numeric.dot(A, calculateFrame(ic.slice(12, 18)));\n    bpstep = clone(A);\n\t// second pair\n    bfra = calculateFrame(ic.slice(24, 30));\n    \n    bfra[0][3] = -ic[27] / 2.0;\n    bfra[1][3] = -ic[28] / 2.0;\n    bfra[2][3] = -ic[29] / 2.0;\n    Qhalf = numeric.transpose(Qhalf);\n    for (let i = 0; i < 3; i++) for (let j = 0; j < 3; j++) {\n      bfra[i][j] = Qhalf[i][j];\n    }\n    \n    let crick2 = numeric.dot(A, bfra);\n    let watson2 = numeric.dot(crick2, calculateFrame(ic.slice(24, 30)));\n    crick2[0][1] *= -1; crick2[1][1] *= -1; crick2[2][1] *= -1; crick2[0][2] *= -1; crick2[1][2] *= -1; crick2[2][2] *= -1;\n    if (saveState) {\n\t\tframes.push(watson2);\n\t\tframes.push(crick2);\n\t}\n\n\t// watson 2 phosphate\n    let phoW = numeric.dot(watson2, calculateFrame(ic.slice(18, 24), true));\n    if (saveState) frames.push(phoW);\n\n    let strW1 = step[1];\n    let strW2 = step[2];\n\n    let strC1 = complement(step[1], false);\n    let strC2 = complement(step[2], false);\n\n    let W1 = [];\n    let W2 = [];\n    let C1 = [];\n    let C2 = [];\n    let P1 = [];\n    let P2 = [];\n\n    let ldict = parseBases();\n\n    W1 = [...ldict[strW1]];\n    W2 = [...ldict[strW2]];\n    C1 = [...ldict[strC1]];\n    C2 = [...ldict[strC2]];\n    P1 = [...ldict[\"pho\"]];\n    P2 = [...ldict[\"pho\"]];\n\n    let current = 1;\n    let result = [];\n\n    let values = [];\n    let bletters = [strW1, \"pho\", strW2, strC2, \"pho\", strC1];\n    [W1, P1, W2, C2, P2, C1].forEach(function(element) {\n        let ref = [];\n        if (current === 1) ref = watson;\n        if (current === 2) ref = phoW;\n        if (current === 3) ref = watson2;\n        if (current === 4) ref = crick2;\n        if (current === 5) ref = phoC;\n        if (current === 6) ref = crick;\n\n\t\tlet set = [];\n        for (let i = 0; i < element.length; i++) {\n            let toAdd = {...element[i]};\n            let toPush = {...element[i]};\n            let valx = toAdd.x;\n            let valy = toAdd.y;\n            let valz = toAdd.z;\n            toAdd.x = ref[0][3]+ref[0][0]*valx+ref[0][1]*valy+ref[0][2]*valz;\n            toAdd.y = ref[1][3]+ref[1][0]*valx+ref[1][1]*valy+ref[1][2]*valz;\n            toAdd.z = ref[2][3]+ref[2][0]*valx+ref[2][1]*valy+ref[2][2]*valz;\n            toPush.x = toAdd.x;\n            toPush.y = toAdd.y;\n            toPush.z = toAdd.z;\n\n            result.push(toAdd);\n\t     \tset.push(toPush);\n        }\n\t\tvalues.push(set);\n        current++;\n    });\n    \n    if (saveState) {\n    \tbvalues = values;\n    \tbseq = bletters;\n    }\n    return result;\n}\n\nexport function getAtomSets() {\n    return {\n      atoms: bvalues,\n      letters: bseq\n    };\n}\n\nexport function getMidBasis() {\n    return stepM;\n}\n\n\nfunction numN(val, N) {\n\tlet str = \"\"+val;\n\tif (str.length >= N) return str;\n\twhile (str.length < N) str = \" \" + str;\n\treturn str;\n}\n\nfunction numN2(val, N) {\n\tlet str = \"\"+val;\n\tif (str.length >= N) return str;\n\twhile (str.length < N) str = str + \" \";\n\treturn str;\n}\n\nexport function getMidFrame() {\n\treturn stepM;\n}\n\nexport function scale(t1, t2, t3) {\n\tt1 *= 11.4591559; t2 *= 11.4591559; t3 *= 11.4591559;\n\tlet th = Math.sqrt(t1*t1+t2*t2+t3*t3);\n\tlet r = Math.PI*th/180.0;\n\tlet r2 = r/2.0;\n\t//console.log(r2/Math.tan(r2));\n\treturn r2/Math.tan(r2);\n}\n\nexport function writePDB() {\n\tlet data = getAtomSets();\n\tlet letters = data.letters;\n\tlet line = \"ATOM      1  P     A A   1       0.000   0.000   0.000 \";\n\tlet atom = 1;\n\tlet result = \"\";\n\t//console.log(letters);\n\tObject.keys(data.atoms).forEach((key, index) => {\n\t\t//if (index >= 4) return;\n\t\tfor (let i = 0; i < data.atoms[key].length; i++) {\n\t\t  let res = index+1;\n\t\t  if (index >= 2) res--;\n\t\t  if (index >= 5) res--;\n\t\t  let resname = letters[key].charAt(0);\n\t\t  if (index === 1 || index === 4) {\n\t\t    if (data.atoms[key][i].name === \"O3'\") {\n\t\t      resname = letters[index-1].charAt(0);\n\t\t      res--;\n\t\t    } else resname = letters[index+1].charAt(0);\n\t\t  }\n\t\t  line = \"ATOM  \" + numN(atom, 5) + \"  \" + numN2(data.atoms[key][i].name, 3) + \"   \" + resname + \" \" + (index < 3 ? \"A\": \"B\") + \"   \" + res + \"     \" + numN(data.atoms[key][i].x.toFixed(3), 7) + \" \" + numN(data.atoms[key][i].y.toFixed(3), 7) + \" \" + numN(data.atoms[key][i].z.toFixed(3), 7) + \" \";\n\t\t  atom++;\n\t\t  result += line + \"\\n\";\n\t\t }\n\t});\n\tresult += \"END\\n\";\n\treturn result;\n}\n\nexport function getFrames() {\n\treturn frames;\n}\n\nexport function getStep() {\n\treturn bpstep;\n}\n\n","import numeric from 'numeric';\n\n\nexport const bases = [\n        \"SEQRES   1 A    1  A\\n\" +\n              \"ATOM      1  C1'   A A   1      -2.479   5.346   0.000\\n\" +\n                \"ATOM      2  N9    A A   1      -1.291   4.498   0.000\\n\" +\n                \"ATOM      3  C8    A A   1       0.024   4.897   0.000\\n\" +\n                \"ATOM      4  N7    A A   1       0.877   3.902   0.000\\n\" +\n                \"ATOM      5  C5    A A   1       0.071   2.771   0.000\\n\" +\n                \"ATOM      6  C6    A A   1       0.369   1.398   0.000\\n\" +\n              \"ATOM      7  N6    A A   1       1.611   0.909   0.000\\n\" +\n                \"ATOM      8  N1    A A   1      -0.668   0.532   0.000\\n\" +\n                \"ATOM      9  C2    A A   1      -1.912   1.023   0.000\\n\" +\n                \"ATOM     10  N3    A A   1      -2.320   2.290   0.000\\n\" +\n                \"ATOM     11  C4    A A   1      -1.267   3.124   0.000\\n\" +\n                \"END\",\n        \"SEQRES   1 A    1  G\\n\" +\n              \"ATOM      1  C1'   G A   1      -2.477   5.399   0.000\\n\" +\n                \"ATOM      2  N9    G A   1      -1.289   4.551   0.000\\n\" +\n                \"ATOM      3  C8    G A   1       0.023   4.962   0.000\\n\" +\n                \"ATOM      4  N7    G A   1       0.870   3.969   0.000\\n\" +\n                \"ATOM      5  C5    G A   1       0.071   2.833   0.000\\n\" +\n                \"ATOM      6  C6    G A   1       0.424   1.460   0.000\\n\" +\n              \"ATOM      7  O6    G A   1       1.554   0.955   0.000\\n\" +\n                \"ATOM      8  N1    G A   1      -0.700   0.641   0.000\\n\" +\n                \"ATOM      9  C2    G A   1      -1.999   1.087   0.000\\n\" +\n                \"ATOM     10  N2    G A   1      -2.949   0.139  -0.001\\n\" +\n                \"ATOM     11  N3    G A   1      -2.342   2.364   0.001\\n\" +\n                \"ATOM     12  C4    G A   1      -1.265   3.177   0.000\\n\" +\n                \"END\",\n        \"SEQRES   1 A    1  T\\n\" +\n              \"ATOM      1  C1'   T A   1      -2.481   5.354   0.000\\n\" +\n                \"ATOM      2  N1    T A   1      -1.284   4.500   0.000\\n\" +\n                \"ATOM      3  C2    T A   1      -1.462   3.135   0.000\\n\" +\n              \"ATOM      4  O2    T A   1      -2.562   2.608   0.000\\n\" +\n                \"ATOM      5  N3    T A   1      -0.298   2.407   0.000\\n\" +\n                \"ATOM      6  C4    T A   1       0.994   2.897   0.000\\n\" +\n              \"ATOM      7  O4    T A   1       1.944   2.119   0.000\\n\" +\n                \"ATOM      8  C5    T A   1       1.106   4.338   0.000\\n\" +\n              \"ATOM      9  C7    T A   1       2.466   4.961   0.001\\n\" +\n                \"ATOM     10  C6    T A   1      -0.024   5.057   0.000\\n\" +\n                \"END\",\n        \"SEQRES   1 A    1  C\\n\" +\n              \"ATOM      1  C1'   C A   1      -2.477   5.402   0.000\\n\" +\n                \"ATOM      2  N1    C A   1      -1.287   4.523   0.000\\n\" +\n                \"ATOM      3  C2    C A   1      -1.477   3.143   0.000\\n\" +\n              \"ATOM      4  O2    C A   1      -2.623   2.684   0.001\\n\" +\n                \"ATOM      5  N3    C A   1      -0.385   2.335   0.000\\n\" +\n                \"ATOM      6  C4    C A   1       0.849   2.855   0.000\\n\" +\n              \"ATOM      7  N4    C A   1       1.883   2.020   0.001\\n\" +\n                \"ATOM      8  C5    C A   1       1.065   4.271   0.000\\n\" +\n                \"ATOM      9  C6    C A   1      -0.038   5.062   0.000\\n\" +\n                \"END\",\n        \"SEQRES   1 A    1  A\\n\" +\n\t\t        \"ATOM      1  O3'   A A   1       0.000  -0.929  -1.315\\n\" +\n                \"ATOM      2  P     A A   1       0.000   0.000   0.000\\n\" +\n                \"ATOM      3  OP1   A A   1      -1.208   0.854  -0.000\\n\" +\n                \"ATOM      4  OP2   A A   1       1.208   0.854   0.000\\n\" +\n                \"ATOM      5  O5'   A A   1       0.000  -0.930   1.315\\n\" +\n                \"END\"\n];\n\n\nlet midFrame = [];\nlet pairingParameters1 = [], pairingParameters2 = [], stepParameters = [];\n\nfunction parseBases() {\n  let letters = [\"A\", \"G\", \"T\", \"C\"];\n  let i = 0;\n  let result = {};\n  letters.forEach((letter) => {\n    let lines = bases[i].split(\"\\n\");\n    let atoms = [];\n    for (let j = 1; j < lines.length-1; j++) {\n      let atom = {};\n      atom.name = lines[j].charAt(13) + (lines[j].charAt(14) !== ' ' ? lines[j].charAt(14): '') + (lines[j].charAt(15) !== ' ' ? lines[j].charAt(15): '');\n      atom.x = parseFloat(lines[j].substring(30, 38));\n      atom.y = parseFloat(lines[j].substring(38, 46));\n      atom.z = parseFloat(lines[j].substring(46, 54));\n      atoms.push(atom);\n    }\n    i++;\n    result[letter] = atoms;\n  });\n\n  return result;\n}\n\nexport function calculatetp(A) {\n\n    let M = [0,0,0,0,0,0];\n    let PI = Math.PI;\n\n    let cosgamma, gamma, phi, omega, sgcp, omega2_minus_phi,\n            sm, cm, sp, cp, sg, cg;\n\n    cosgamma = A[2][2];\n    if (cosgamma > 1.0) cosgamma = 1.0;\n    else if (cosgamma < -1.0) cosgamma = -1.0;\n\n    gamma = Math.acos(cosgamma);\n\n    sgcp = A[1][1]*A[0][2]-A[0][1]*A[1][2];\n\n    if (gamma === 0.0) omega = -Math.atan2(A[0][1],A[1][1]);\n    else omega = Math.atan2(A[2][1]*A[0][2]+sgcp*A[1][2],sgcp*A[0][2]-A[2][1]*A[1][2]);\n\n    omega2_minus_phi = Math.atan2(A[1][2],A[0][2]);\n\n    phi = omega/2.0 - omega2_minus_phi;\n\n    M[0] = gamma*Math.sin(phi)*180.0/PI;\n    M[1] = gamma*Math.cos(phi)*180.0/PI;\n    M[2] = omega*180.0/PI;\n\n    sm = Math.sin(omega/2.0-phi);\n    cm = Math.cos(omega/2.0-phi);\n    sp = Math.sin(phi);\n    cp = Math.cos(phi);\n    sg = Math.sin(gamma/2.0);\n    cg = Math.cos(gamma/2.0);\n\n    M[3] = (cm*cg*cp-sm*sp)*A[0][3]+(sm*cg*cp+cm*sp)*A[1][3]-sg*cp*A[2][3];\n    M[4] = (-cm*cg*sp-sm*cp)*A[0][3]+(-sm*cg*sp+cm*cp)*A[1][3]+sg*sp*A[2][3];\n    M[5] = (cm*sg)*A[0][3]+(sm*sg)*A[1][3]+cg*A[2][3];\n\n    return M;\n\n}\n\n\nexport function calculateA(tp) {\n\n    let M = [[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,1]];\n    let PI = Math.PI;\n\n    let t1 = tp[0]*PI/180.0;\n    let t2 = tp[1]*PI/180.0;\n    let t3 = tp[2]*PI/180.0;\n\n    let gamma = Math.sqrt(t1*t1+t2*t2);\n    let phi = Math.atan2(t1,t2);\n    let omega = t3;\n\n    let sp = Math.sin(omega/2.0+phi);\n    let cp = Math.cos(omega/2.0+phi);\n    let sm = Math.sin(omega/2.0-phi);\n    let cm = Math.cos(omega/2.0-phi);\n    let sg = Math.sin(gamma);\n    let cg = Math.cos(gamma);\n\n    M[0][0] = cm*cg*cp-sm*sp;\n    M[0][1] = -cm*cg*sp-sm*cp;\n    M[0][2] = cm*sg;\n    M[1][0] = sm*cg*cp+cm*sp;\n    M[1][1] = -sm*cg*sp+cm*cp;\n    M[1][2] = sm*sg;\n    M[2][0] = -sg*cp;\n    M[2][1] = sg*sp;\n    M[2][2] = cg;\n\n    sp = Math.sin(phi); cp = Math.cos(phi); sg = Math.sin(gamma/2.0); cg = Math.cos(gamma/2.0);\n\n    M[0][3] = tp[3]*(cm*cg*cp-sm*sp) + tp[4]*(-cm*cg*sp-sm*cp) + tp[5]*(cm*sg);\n    M[1][3] = tp[3]*(sm*cg*cp+cm*sp) + tp[4]*(-sm*cg*sp+cm*cp) + tp[5]*(sm*sg);\n    M[2][3] = tp[3]*(-sg*cp) + tp[4]*(sg*sp) + tp[5]*(cg);\n\n    return M;\n\n}\n\n\nexport function calculateM(tp) {\n\n    let M = [[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,1]];\n    let PI = Math.PI;\n\n    let t1 = tp[0]*PI/180.0;\n    let t2 = tp[1]*PI/180.0;\n    let t3 = tp[2]*PI/180.0;\n\n    let gamma = 0.5*Math.sqrt(t1*t1+t2*t2);\n    let phi = Math.atan2(t1,t2);\n    let omega = t3;\n\n    let sp = Math.sin(phi);\n    let cp = Math.cos(phi);\n    let sm = Math.sin(omega/2.0-phi);\n    let cm = Math.cos(omega/2.0-phi);\n    let sg = Math.sin(gamma);\n    let cg = Math.cos(gamma);\n\n    M[0][0] = cm*cg*cp-sm*sp;\n    M[0][1] = -cm*cg*sp-sm*cp;\n    M[0][2] = cm*sg;\n    M[1][0] = sm*cg*cp+cm*sp;\n    M[1][1] = -sm*cg*sp+cm*cp;\n    M[1][2] = sm*sg;\n    M[2][0] = -sg*cp;\n    M[2][1] = sg*sp;\n    M[2][2] = cg;\n\n\tM[0][3] = 0.0;\n\tM[1][3] = 0.0;\n\tM[2][3] = 0.0;\n\n    sp = Math.sin(phi); cp = Math.cos(phi); sg = Math.sin(gamma/2.0); cg = Math.cos(gamma/2.0);\n\n    M[0][3] = (tp[3]*(cm*cg*cp-sm*sp) + tp[4]*(-cm*cg*sp-sm*cp) + tp[5]*(cm*sg))/2.0;\n    M[1][3] = (tp[3]*(sm*cg*cp+cm*sp) + tp[4]*(-sm*cg*sp+cm*cp) + tp[5]*(sm*sg))/2.0;\n    M[2][3] = (tp[3]*(-sg*cp) + tp[4]*(sg*sp) + tp[5]*(cg))/2.0;\n\n    return M;\n\n}\n\n\n\n\nexport function jeigen(a) {\n\n  if (a.length !== a[0].length) return null;\n\n  let ip, iq, i, j;\n  let tresh, theta, tau, t, sm, s, h, g, c;\n\n  let x = [];\n  let v = [];\n  //let v = a.slice();\n  for (i = 0; i < a.length; i++) {\n    let vt1 = [];\n    let vt2 = [];\n    for (j = 0; j < a.length; j++) {\n      if (i === j) vt1.push(1.0); else vt1.push(0.0);\n      vt2.push(a[i][j]);\n    }\n    x.push(vt2);\n    v.push(vt1);\n  }\n  //let x = numeric.eye(a.length);\n\n  let b = [];\n  let z = [];\n  let d = [];\n  for (i = 0; i < a.length; i++) {\n    b.push(0.0);\n    z.push(0.0);\n    d.push(0.0);\n  }\n\n  tresh = 0.0;\n\n  for (ip = 0; ip < a.length; ip++) {\n    d[ip]=x[ip][ip]\n    b[ip]=d[ip];\n    z[ip]=0.0;\n  }\n\n  for (i = 0; i < 500; i++) {\n\n    sm = 0.0;\n    for(ip=0; ip < a.length-1; ip++)\n      for (iq=ip+1; iq < a.length; iq++) sm += Math.abs(x[ip][iq]);\n    if (sm === 0.0) {\n       let result = {eigenvectors: v, eigenvalues: d};\n       return result;\n    }\n\n    for (ip = 0; ip < a.length-1; ip++) {\n      for (iq = ip+1; iq < a.length; iq++) {\n        g = 100.0*Math.abs(x[ip][iq]);\n        if (Math.abs(x[ip][iq]) > tresh) {\n\n          h = d[iq]-d[ip];\n\n          if ((Math.abs(h)+g) === Math.abs(h)) {\n\t      if (h !== 0.0)\n  \t        t = (x[ip][iq])/h;\n          else t = 0.0;\n\t      } else {\n            if (x[ip][iq] !== 0.0) theta = 0.5*h/x[ip][iq];\n\t        else theta = 0.0;\n            t = 1.0/(Math.abs(theta)+Math.sqrt(1.0+theta*theta));\n            if (theta < 0.0) t = -t;\n\t      }\n\n          c = 1.0/Math.sqrt(1.0+t*t);\n          s = t*c;\n          tau = s/(1.0+c);\n          h = t*x[ip][iq];\n          z[ip] -= h;\n          z[iq] += h;\n          d[ip] -= h;\n          d[iq] += h;\n\n          x[ip][iq] = 0.0;\n\t  for (j = 0; j <= ip-1; j++) {\n            g=x[j][ip];\n            h=x[j][iq];\n            x[j][ip]=g-s*(h+g*tau);\n            x[j][iq]=h+s*(g-h*tau);\n\t  }\n          for (j = ip+1; j <= iq-1; j++) {\n            g=x[ip][j];\n            h=x[j][iq];\n            x[ip][j]=g-s*(h+g*tau);\n            x[j][iq]=h+s*(g-h*tau);\n          }\n          for (j = iq+1; j < a.length; j++) {\n            g=x[ip][j];\n            h=x[iq][j];\n            x[ip][j]=g-s*(h+g*tau);\n            x[iq][j]=h+s*(g-h*tau);\n\t      }\n          for (j = 0; j < a.length; j++) {\n\t        g=v[j][ip];\n            h=v[j][iq];\n            v[j][ip]=g-s*(h+g*tau);\n            v[j][iq]=h+s*(g-h*tau);\n\t      }\n\n        }\n      }\n      }\n      for (ip=0; ip < a.length; ip++) {\n\t    b[ip] += z[ip];\n        d[ip] = b[ip];\n\t    z[ip] = 0.0;\n      }\n  }\n\n  console.log(\"could not solve eigenvectors of matrix in 500 iterations\");\n  return null;\n\n}\n\nfunction centroid(vec) {\n\tlet x = 0.0, y = 0.0, z = 0.0;\n\tfor (let i = 0; i < vec.length; i++) {\n\t\tx += vec[i][0];\n\t\ty += vec[i][1];\n\t\tz += vec[i][2];\n\t}\n\treturn [x/vec.length, y/vec.length, z/vec.length];\n}\n\n// copy 2D array\nfunction clone(vec) {\n\tlet result = [];\n\tresult.length = vec.length;\n\tfor (let i = 0; i < vec.length; i++) {\n\t  result[i] = [];\n\t  result[i].length = vec[i].length;\n\t  for (let j = 0; j < vec[i].length; j++) {\n\t    result[i][j] = vec[i][j];\n\t  }\n\t}\n\treturn result;\n}\n\nfunction translate(val, points) {\n\n  for (let i = 0; i < points.length; i++) {\n  \tpoints[i][0] += val[0];\n  \tpoints[i][1] += val[1];\n  \tpoints[i][2] += val[2];\n  }\n\n}\n\nfunction superposition(fixed, moved) {\n\tlet cena = centroid(fixed);\n\tlet cenb = centroid(moved);\n\tcena[0] = -cena[0]; cena[1] = -cena[1]; cena[2] = -cena[2];\n\tcenb[0] = -cenb[0]; cenb[1] = -cenb[1]; cenb[2] = -cenb[2];\n\n    let a = clone(fixed);\n    translate(cena, a);\n\n    let b = clone(moved);\n    translate(cenb, b);\n\n    let corr = numeric.dot(numeric.transpose(b), a);\n\t\n    let svd = numeric.svd(corr);\n    let u = clone(svd.U);\n    let u_trans = numeric.transpose(u);\n    let vt = clone(svd.V);\n    let vt_orig = clone(svd.V);\n    let rot_notrans = numeric.dot(vt, u_trans);\n    let rot = numeric.transpose(rot_notrans)\n    let det = numeric.det(rot);\n    let cb_tmp;\n    if (det < 0) {\n    \t//console.log(\"det < 0\");\n    \tvt = vt_orig;\n    \tvt[2][0] = -vt[2][0];\n    \tvt[2][1] = -vt[2][1];\n    \tvt[2][2] = -vt[2][2];\n\tcb_tmp = numeric.transpose(vt);\t\n\trot_notrans = numeric.dot(cb_tmp, u_trans);\n\trot = numeric.transpose(rot_notrans);\n    }\n    \n    cb_tmp = numeric.dot([cenb], rot);\n    let trans = [cena[0] - cb_tmp[0][0], cena[1]-cb_tmp[0][1], cena[2] - cb_tmp[0][2]];\n    let result = [];\n    result.length = 4;\n\n    rot = numeric.transpose(rot);\n    result[0] = [rot[0][0], rot[0][1], rot[0][2], -trans[0]];\n    result[1] = [rot[1][0], rot[1][1], rot[1][2], -trans[1]];\n    result[2] = [rot[2][0], rot[2][1], rot[2][2], -trans[2]];\n    result[3] = [0.0, 0.0, 0.0, 1.0];\n    //console.log(JSON.stringify(result));\n    return result;\n}\n\nexport function fitFrames(x) {\n\tlet atoms = x.atoms;\n\tif (atoms.length === 0) return;\n\tlet letters = x.letters;\n\tlet bases = parseBases();\n\t//console.log(letters);\n\t//console.log(bases);\n\tlet W1 = [], W2 = [], C1 = [], C2 = [];\n\tlet rW1 = [], rW2 = [], rC1 = [], rC2 = [];\n\t//console.log(atoms[0].length);\n\t//console.log(bases[letters[0]].length);\n\t//console.log(letters[0] + letters[2] + letters[3] + letters[5]);\n\tfor (let i = 0; i < atoms[0].length; i++) {\n\t\tfor (let j = 0; j < bases[letters[0]].length; j++) {\n\t\t  if (atoms[0][i].name === bases[letters[0]][j].name) {\n \t\t    W1.push([atoms[0][i].x, atoms[0][i].y, atoms[0][i].z]);\n\t\t    rW1.push([bases[letters[0]][j].x, bases[letters[0]][j].y, bases[letters[0]][j].z]);\n\t\t  }\n\t\t} \n\t}\n\tfor (let i = 0; i < atoms[2].length; i++) {\n\t\tfor (let j = 0; j < bases[letters[2]].length; j++) {\n\t\t  if (atoms[2][i].name === bases[letters[2]][j].name) {\n \t\t    W2.push([atoms[2][i].x, atoms[2][i].y, atoms[2][i].z]);\n\t\t    rW2.push([bases[letters[2]][j].x, bases[letters[2]][j].y, bases[letters[2]][j].z]);\n\t\t  }\n\t\t}\n\t}\n\n\tfor (let i = 0; i < atoms[3].length; i++) {\n\t\tfor (let j = 0; j < bases[letters[3]].length; j++) {\n\t\t  if (atoms[3][i].name === bases[letters[3]][j].name) {\n \t\t    C2.push([atoms[3][i].x, atoms[3][i].y, atoms[3][i].z]);\n\t\t    rC2.push([bases[letters[3]][j].x, bases[letters[3]][j].y, bases[letters[3]][j].z]);\n\t\t  }\n\t\t} \n\t}\n\n\tfor (let i = 0; i < atoms[5].length; i++) {\n\t\tfor (let j = 0; j < bases[letters[5]].length; j++) {\n\t\t  if (atoms[5][i].name === bases[letters[5]][j].name) {\n \t\t    C1.push([atoms[5][i].x, atoms[5][i].y, atoms[5][i].z]);\n\t\t    rC1.push([bases[letters[5]][j].x, bases[letters[5]][j].y, bases[letters[5]][j].z]);\n\t\t  }\n\t\t} \n\t}\n\n\tlet result = [superposition(W1, rW1), superposition(C1, rC1), superposition(W2, rW2), superposition(C2, rC2)];\n    //console.log(JSON.stringify(result));\n    return result;\n\t\n}\n\nfunction setRow(matrix, row, val) {\n\tfor (let i = 0; i < val.length; i++) {\n\t\tmatrix[row][i] = val[i];\n\t}\n}\n\nfunction setColumn(matrix, col, val) {\n\tfor (let i = 0; i < val.length; i++) {\n\t\tmatrix[i][col] = val[i];\n\t}\n}\n\nexport function getBasePlanes(x) {\n\t//console.log(x);\n\tlet frames = fitFrames(x);\n\tif (!frames) return;\n\t//console.log(JSON.stringify(frames));\n\tlet ref1 = clone(frames[0]);\n\tlet ref2 = clone(frames[1]);\n\t\n\tlet temp = clone(ref1);\n\tlet temp2 = clone(ref1);\n\tlet y2 = [ref2[0][1], ref2[1][1], ref2[2][1]];\n\tlet z1 = [ref1[0][2], ref1[1][2], ref1[2][2]];\n\t// known as z3 in java code\n\tlet z2 = [ref2[0][2], ref2[1][2], ref2[2][2]];\n\tif (z1[0]*z2[0] + z1[1]*z2[1] + z1[2]*z2[2] < 0.0) {\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\ty2[i] = -y2[i];\n\t\t\tz2[i] = -z2[i];\n\t\t}\n\t\tsetColumn(ref2, 1, y2);\n\t\tsetColumn(ref2, 2, z2);\n\t}\n\t\n\t// we average the base rotations and then find the best fitting 3x3 Q matrix\n\t//   by doing the SVD of this and calculating U*V_transpose\n\ttemp = numeric.add(temp, ref2);\n\ttemp = numeric.mul(0.5, temp);\n\tlet test = [[temp[0][0], temp[0][1], temp[0][2]], [temp[1][0], temp[1][1], temp[1][2]], [temp[2][0], temp[2][1], temp[2][2]]];\n\tlet testsvd = numeric.svd(test);\n\tlet Q = numeric.dot(testsvd.U, numeric.transpose(testsvd.V));\n\n    temp[0][0] = Q[0][0]; temp[1][0] = Q[1][0]; temp[2][0] = Q[2][0];\n\ttemp[0][1] = Q[0][1]; temp[1][1] = Q[1][1]; temp[2][1] = Q[2][1];\n\ttemp[0][2] = Q[0][2]; temp[1][2] = Q[1][2]; temp[2][2] = Q[2][2];\n\n\n\tlet pairingParameters = calculatetp(numeric.dot(numeric.inv(ref2), temp2));\n\t//console.log(\"Pairing Parameters:\");\n\t//console.log(pairingParameters);\n\tpairingParameters1 = pairingParameters;\n\tlet result = [0, 0];\n\t\n\tlet Mtest = calculateM(pairingParameters);\n\tresult[0] = clone(numeric.dot(ref2, Mtest));\n\t//result[0] = clone(temp);\n\t\n\tref1 = clone(frames[2]);\n\tref2 = clone(frames[3]);\n\t\n\ttemp = clone(ref1);\n\ttemp2 = clone(ref1);\n\ty2 = [ref2[0][1], ref2[1][1], ref2[2][1]];\n\t// known as z3 in java code\n\tz2 = [ref2[0][2], ref2[1][2], ref2[2][2]];\n\tz1 = [ref1[0][2], ref1[1][2], ref1[2][2]];\n\tif (z1[0]*z2[0] + z1[1]*z2[1] + z1[2]*z2[2] < 0.0) {\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\ty2[i] = -y2[i];\n\t\t\tz2[i] = -z2[i];\n\t\t}\n\t\tsetColumn(ref2, 1, y2);\n\t\tsetColumn(ref2, 2, z2);\n\t}\n\t\n\t// average and find the best fit with SVD(average) and then Q = U*V_transpose\n\ttemp = numeric.add(temp, ref2);\n\ttemp = numeric.mul(0.5, temp);\n\ttest = [[temp[0][0], temp[0][1], temp[0][2]], [temp[1][0], temp[1][1], temp[1][2]], [temp[2][0], temp[2][1], temp[2][2]]];\n\ttestsvd = numeric.svd(test);\n\tQ = numeric.dot(testsvd.U, numeric.transpose(testsvd.V));\n\n    temp[0][0] = Q[0][0]; temp[1][0] = Q[1][0]; temp[2][0] = Q[2][0];\n\ttemp[0][1] = Q[0][1]; temp[1][1] = Q[1][1]; temp[2][1] = Q[2][1];\n\ttemp[0][2] = Q[0][2]; temp[1][2] = Q[1][2]; temp[2][2] = Q[2][2];\n\n\tpairingParameters = calculatetp(numeric.dot(numeric.inv(ref2), temp2));\n\tMtest = calculateM(pairingParameters);\n\t//console.log(JSON.stringify(temp));\n\t//console.log(JSON.stringify(numeric.dot(ref2, Mtest)));\n\t//console.log(\"Pairing Parameters:\");\n\t//console.log(pairingParameters);\n\tpairingParameters2 = pairingParameters;\n\tresult[1] = clone(numeric.dot(ref2, Mtest));\n\t//result[1] = clone(temp);\n\tstepParameters = calculatetp(numeric.dot(numeric.inv(result[0]), result[1]));\n\t//console.log(\"Step Parameters:\");\n\t//console.log(stepParameters);\n\tmidFrame = calculateM(stepParameters);\n\t//console.log(JSON.stringify(midFrame));\n\treturn result;\n\n}\n\n\nexport function getMidFrame() {\n\treturn midFrame;\n}\n\nexport function getParameters() {\n\treturn [pairingParameters1, stepParameters, pairingParameters2];\n}\n\n\nfunction testSuperposition() {\n\tlet points = [[0, 0, 0], [2,0,0], [0,2,0]];\n\tlet ref = [[0, 0, 2], [0, 2, 2], [2,0,2]];\n\t//console.log(superposition(points, ref));\n\treturn(superposition(points, ref));\n}\n\nfunction midFrameTest(P, A1, A2) {\n\tlet A = numeric.dot(numeric.inv(A1), A2);\n\tlet steps = calculatetp(A);\n\tlet basis = calculateM(steps);\n\t\n\tlet x_p = P[0] - basis[0][3];\n\tlet y_p = P[1] - basis[1][3];\n\tlet z_p = P[2] - basis[2][3];\n\t\n\tlet xp = x_p * basis[0][0] + y_p * basis[1][0] + z_p * basis[2][0];\n\tlet yp = x_p * basis[0][1] + y_p * basis[1][1] + z_p * basis[2][1];\n\tlet zp = x_p * basis[0][2] + y_p * basis[1][2] + z_p * basis[2][2];\n\n\treturn [xp, yp, zp];\n}\n\n","import './DThree.css';\nimport React, {Component} from 'react';\nimport PersistenceWorker from './Persistence.worker';\nimport * as trois from 'three';\nimport numeric from 'numeric';\nimport Eigenvector from './Eigenvector.jsx';\nimport * as ref from '../References/References.jsx';\nimport * as ref3 from '../References/References3DNA.jsx';\n\nclass DThree extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modeNum : '0',\n      stepBy: 0,\n      showIC: false,\n      isDragging: false,\n      useScale: true,\n      numSamples: 20000,\n      parameters3: [],\n      phoW: [0,0,0],\n      phoC: [0,0,0],\n      startX: 0,\n      startY: 0,\n      translateX: 0,\n      translateY: 0,\n      lastTranslateX: 0,\n      lastTranslateY: 0,\n      evalue: '',\n      midVal: '',\n      mean: props.mean,\n      cov: props.cov,\n      tetramer: props.tetramer,\n      eigenvalues: [],\n      eigenvectors: [],\n      eigenlist: [],\n      processing: false,\n      pdbText: ''\n    };\n    this.scene = null;\n    this.camera = null;\n    this.renderer = null;\n  }\n\n  onMouseMove = ({clientX, clientY}) => {\n    if (!this.state.isDragging) return;\n    this.setState({\n      translateX: clientX - this.state.startX + this.state.lastTranslateX,\n      translateY: clientY - this.state.startY + this.state.lastTranslateY\n    });\n  };\n\n  persistenceLength = () => {\n    this.setState({processing: true});\n    let worker = new PersistenceWorker();\n    worker.postMessage(this.state);\n    worker.addEventListener(\"message\", (e) => {\n    \tconsole.log(e);\n    \tlet P = e.data.args;\n    \talert(\"Persistence length in Angstroms: \" + P);\n    \tthis.setState({processing: false});\n    });\n/*\n\tlet cov = this.state.cov;\n\t//console.log(cov);\n\tlet F = numeric.inv(cov);\n\tlet eigen = ref.jeigen(F);\n\tlet factor = [[]];\n\tfactor[0].length = 30;\n\tfor (let i = 0; i < 30; i++) {\n\t  factor[0][i] = 1/Math.sqrt(eigen.eigenvalues[i]);\n\t}\n\tlet step0 = [this.state.mean];\n\tlet A = numeric.identity(4);\n\tfor (let i = 0; i < 4; i++) A[i][i] = 0;\n\tlet v = [[]];\n\tv[0].length = 30;\n\tlet coord = [];\n\tcoord.length = 30;\n\n\tfor (let i = 0; i < parseInt(this.state.numSamples); i++) {\n\t  for (let i = 0; i < 30; i++) v[0][i] = factor[0][i]*ref.randg();\n\t  let step = numeric.add(numeric.transpose(numeric.dot(eigen.eigenvectors, numeric.transpose(v))), step0);\n\t  //console.log(step);\n\t  for (let i = 0; i < 30; i++) coord[i] = step[0][i];\n\t  ref.get30Coordinates(coord, this.state.tetramer);\n\t  let bpstep = ref.getStep();\n\t  A = numeric.add(A, bpstep);\n\t}\n\tA = numeric.mul(1/parseFloat(this.state.numSamples), A);\n\tfor (let i = 0; i < 2000; i++) {\n\t  A = numeric.dot(A, A);\n\t}\n\talert(\"Persistence length in Angstroms: \" + A[2][3]);*/\n  }\n\n  onMouseUp = ({clientX, clientY}) => {\n    this.mount.removeEventListener('mousemove', this.onMouseMove);\n    this.mount.removeEventListener('mouseup', this.onMouseUp);\n    this.setState({\n      lastTranslateX: this.state.translateX,\n      lastTranslateY: this.state.translateY,\n      startX: 0,\n      startY: 0,\n      isDragging: false\n    });\n  };\n\n  onMouseDown = ({clientX,  clientY}) => {\n    this.mount.addEventListener('mousemove', this.onMouseMove);\n    this.mount.addEventListener('mouseup', this.onMouseUp);\n    this.setState({\n      startX: clientX,\n      startY: clientY,\n      isDragging: true\n    });\n  };\n \n  moveEigen() {\n    let cov = this.state.cov;\n    let F = numeric.inv(cov);\n    let eigen = ref.jeigen(F);\n    let demo = this.state.mean;\n    demo = numeric.add(demo, numeric.mul(parseFloat(this.state.stepBy) * (this.state.useScale ? 1/Math.sqrt(eigen.eigenvalues[parseInt(this.state.modeNum)]) : 1.0), eigen.eigenvectors[parseInt(this.state.modeNum)]));\n    let points = ref.get30Coordinates(demo, this.state.tetramer, true);\n    let PhoW = ref.getAtomSets().atoms[1][1];\n    let PhoC = ref.getAtomSets().atoms[4][1];\n    ref3.getBasePlanes(ref.getAtomSets());\n    let midframe = ref.getMidFrame();\n    let px = PhoW.x - midframe[0][3];\n    let py = PhoW.y - midframe[1][3];\n    let pz = PhoW.z - midframe[2][3];\n\tlet pw = [\n\t\tpx*midframe[0][0]+py*midframe[1][0]+pz*midframe[2][0],\n\t\tpx*midframe[0][1]+py*midframe[1][1]+pz*midframe[2][1],\n\t\tpx*midframe[0][2]+py*midframe[1][2]+pz*midframe[2][2]\n\t];\n    px = PhoC.x - midframe[0][3];\n    py = PhoC.y - midframe[1][3];\n    pz = PhoC.z - midframe[2][3];\t\n    let pc = [\n    \tpx*midframe[0][0]+py*midframe[1][0]+pz*midframe[2][0],\n\t\tpx*midframe[0][1]+py*midframe[1][1]+pz*midframe[2][1],\n\t\tpx*midframe[0][2]+py*midframe[1][2]+pz*midframe[2][2]\n\t];\n\tthis.setState({\n\t\tphoW: pw, \n\t\tphoC: pc, \n\t\tparameters3: ref3.getParameters(),\n\t\tpdbText: ref.writePDB()\n\t});\n  }\n\n  componentWillUnmount() {\n    this.mount.removeEventListener('mousemove', this.onMouseMove);\n    this.mount.removeEventListener('mouseup', this.onMouseUp);\n    this.mount.removeEventListener('mousedown', this.onMouseDdown);\n  }\n\n  componentDidMount() {\n    let cov = this.state.cov;\n    let F = numeric.inv(cov);\n    let eigen = ref.jeigen(F);\n    let eigenlist = [];\n    eigen.eigenvalues.forEach((item, index) => {\n\t  let val = {index: index, value: item};\n\t  eigenlist.push(val);\n    });\n    eigenlist.sort((a, b) => (a.value > b.value ? 1 : -1));\n    let modeN = eigenlist[0].index + '';\n    this.setState({evalue: eigen.eigenvalues[parseInt(modeN)],\n    eigenvalues: eigen.eigenvalues, eigenvectors: eigen.eigenvectors, eigenlist: eigenlist, modeNum: modeN});\n    let demo = this.state.mean;\n    let points = ref.get30Coordinates(demo, this.state.tetramer, true);\n    let PhoW = ref.getAtomSets().atoms[1][1];\n    let PhoC = ref.getAtomSets().atoms[4][1];\n    ref3.getBasePlanes(ref.getAtomSets());\n    let midframe = ref.getMidFrame();\n    let px = PhoW.x - midframe[0][3];\n    let py = PhoW.y - midframe[1][3];\n    let pz = PhoW.z - midframe[2][3];\n\tlet pw = [\n\t\tpx*midframe[0][0]+py*midframe[1][0]+pz*midframe[2][0],\n\t\tpx*midframe[0][1]+py*midframe[1][1]+pz*midframe[2][1],\n\t\tpx*midframe[0][2]+py*midframe[1][2]+pz*midframe[2][2]\n\t];\n    px = PhoC.x - midframe[0][3];\n    py = PhoC.y - midframe[1][3];\n    pz = PhoC.z - midframe[2][3];\t\n    let pc = [\n    \tpx*midframe[0][0]+py*midframe[1][0]+pz*midframe[2][0],\n\t\tpx*midframe[0][1]+py*midframe[1][1]+pz*midframe[2][1],\n\t\tpx*midframe[0][2]+py*midframe[1][2]+pz*midframe[2][2]\n\t];\n\tthis.setState({\n\t\tphoW: pw, \n\t\tphoC: pc, \n\t\tparameters3: ref3.getParameters(),\n\t\tpdbText: ref.writePDB()\n\t});\n    document.body.style.backgroundColor = \"white\";\n    this.scene = new trois.Scene();\n    this.scene.background = new trois.Color( 0xffffff );\n    this.camera = new trois.OrthographicCamera(-20, 20, 20, -20, -40, 500);\n    this.scene.add(this.camera);\n    this.renderer = new trois.WebGLRenderer();\n    this.renderer.setSize(600, 600);\n//    this.renderer.setSize( window.innerWidth, window.innerHeight);\n    this.mount.appendChild(this.renderer.domElement);\n    this.mount.addEventListener('mousedown', this.onMouseDown);\n\n    this.camera.zoom = 1.0;\n\n    let avgx=0.0, avgy=0.0, avgz=0.0;\n    for (let i = 0; i < points.length; i++) {\n      avgx += points[i].x;\n      avgy += points[i].y;\n      avgz += points[i].z;\n    }\n    avgx /= points.length; avgy /= points.length; avgz /= points.length;\n    let spheres = [];\n    let val = '';\n    points.forEach((atom) => {\n      //  console.log(atom);\n        let geometry = new trois.SphereGeometry(1.4, 10, 10, 10);\n        let color = 0xAA00AA;\n        if (atom.name.charAt(0) === 'O') color = 0xCC0000;\n        if (atom.name.charAt(0) === 'C') color = 0x777777;\n        if (atom.name.charAt(0) === 'N') color = 0x0000CC;\n\n\tif (atom.name === 'P') {\n\t\tlet px = atom.x - ref.getMidBasis()[0][3];\n\t\tlet py = atom.y - ref.getMidBasis()[1][3];\n\t\tlet pz = atom.z - ref.getMidBasis()[2][3];\n\t\tlet pxx = px*ref.getMidBasis()[0][0] + py*ref.getMidBasis()[1][0] + pz*ref.getMidBasis()[2][0];\n                let pyy = px*ref.getMidBasis()[0][1] + py*ref.getMidBasis()[1][1] + pz*ref.getMidBasis()[2][1];\n                let pzz = px*ref.getMidBasis()[0][2] + py*ref.getMidBasis()[1][2] + pz*ref.getMidBasis()[2][2];\n\t\tval += pxx + \", \" + pyy + \", \" + pzz + \" ... \";\n\t}\n\n        let material = new trois.MeshLambertMaterial({color: color});\n        let sphere = new trois.Mesh(geometry, material);\n        sphere.position.set(atom.x-avgx, atom.y-avgy, atom.z-avgz);\n        this.scene.add(sphere);\n        spheres.push(sphere);\n    });\n    this.setState({ midVal: val });\n    const light1 = new trois.PointLight( 0xffffff, 5, 200 );\n    light1.position.set(0, 0, 50);\n    this.scene.add(light1);\n    const light2 = new trois.PointLight( 0xffffff, 5, 200 );\n    light2.position.set(0, 0, -50);\n    this.scene.add(light2);\n\n    let angle = 0;\n    //his.camera.position.z = 0.0;\n    this.camera.position.x = 20.0*Math.cos(angle);\n    this.camera.position.z = 20.0*Math.sin(angle);\n\n    this.camera.lookAt(0.0, 0.0, 0.0);\n\n    let scale = 1/Math.sqrt(eigen.eigenvalues[parseInt(modeN)]);\n    let x = 0;\n    let dir = 1;\n    const animate = () => {\n      if (this.state.useScale) scale = 1.0/Math.sqrt(eigen.eigenvalues[parseInt(this.state.modeNum)]);\n      else scale = 1.0;\n      let icnew = numeric.add(demo, numeric.mul(x/50*scale, eigen.eigenvectors[parseInt(this.state.modeNum)]));\n      let points = ref.get30Coordinates(icnew, this.state.tetramer, false);\n      let i = 0;\n      points.forEach((atom) => {\n        spheres[i].position.set(atom.x-avgx, atom.y-avgy, atom.z-avgz);\n        i++;\n      })\n      let theta = this.state.translateX / 100.0; let phi = -this.state.translateY / 100.0;\n      this.camera.position.x = 30.0*Math.cos(theta)*Math.cos(phi);\n      this.camera.position.z = 30.0*Math.sin(theta)*Math.cos(phi);\n      this.camera.position.y = 30.0*Math.sin(phi);\n      this.camera.lookAt(0.0, 0.0, 0.0);\n      requestAnimationFrame(animate);\n      this.renderer.render(this.scene, this.camera);\n      x += dir;\n      if (x === 100) {\n        dir = -1;\n      }\n      if (x === -100) {\n        dir = 1;\n      }\n    }\n    console.log(\"animating.....\");\n    animate();\n  }\n\n  inputChanged = (event) => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name] : value\n      }, () => {\n        if (name === 'stepBy' && !isNaN(parseFloat(value))) this.moveEigen();\n        \n        if ((name === 'useScale' || name === 'modeNum') && parseFloat(this.state.stepBy) !== 0 && !isNaN(parseFloat(this.state.stepBy))) this.moveEigen();\n      });\n      if (name === 'modeNum')\n        this.setState({evalue: this.state.eigenvalues[parseInt(value)]});\n\n  }\n\n\n  render() {\n  \n    let valtitles = [\"pair 1\", \"pho W\", \"bp step\", \"pho C\", \"pair 2\"];\n    let val3titles = [\"pair 1\", \"bp step\", \"pair 2\"];\n    let meanvals = [this.state.mean.slice(0,6), this.state.mean.slice(6, 12), this.state.mean.slice(12, 18), this.state.mean.slice(18, 24), this.state.mean.slice(24, 30)];\n    \n    \n    return (<>\n    \t<div className=\"data-window\">\n    Number of Gaussian samples<input type=\"number\" step=\"1\" value={this.state.numSamples} name=\"numSamples\" onChange={this.inputChanged}/><button disabled={this.state.processing} onClick={this.persistenceLength}>Calculate Persistence Length</button><br/>\n\t<b>Mean state:</b><input type=\"checkbox\" name=\"showIC\" checked={this.state.showIC} onChange={this.inputChanged}/>Show original internal (rad/5) form<table><tbody>{meanvals.map((value,index) => (<tr><td>{valtitles[index]}</td><td>{(value[0]*(this.state.showIC ? 1 : 11.4591559*ref.scale(value[0],value[1],value[2]))).toFixed(5)}</td><td>{(value[1]*(this.state.showIC ? 1 : 11.4591559*ref.scale(value[0],value[1],value[2]))).toFixed(5)}</td><td>{(value[2]*(this.state.showIC ? 1 : 11.4591559*ref.scale(value[0],value[1],value[2]))).toFixed(5)}</td><td>{value[3]}</td><td>{(value[4]).toFixed(5)}</td><td>{(value[5]).toFixed(5)}</td></tr>))}</tbody></table>\n\t<b>Phosphates:</b><table><thead style={{border: \"0 none\"}}><tr><td></td><td>x_p</td><td>y_p</td><td>z_p</td></tr></thead><tbody><tr><td>watson</td><td>{this.state.phoW[0].toFixed(5)}</td><td>{this.state.phoW[1].toFixed(5)}</td><td>{this.state.phoW[2].toFixed(5)}</td></tr><tr><td>crick</td><td>{this.state.phoC[0].toFixed(5)}</td><td>{this.state.phoC[1].toFixed(5)}</td><td>{this.state.phoC[2].toFixed(5)}</td></tr></tbody></table>\n\t{this.state.eigenvalues.length > 0 ? <><select value={this.state.modeNum} name=\"modeNum\" onChange={this.inputChanged}>\n        {this.state.eigenlist.map((value) => (\n            <option key={value.value} value={value.index}>{value.index + \": eigenvalue: \" + value.value}</option>\n        ))}</select> <input type=\"checkbox\" name=\"useScale\" onChange={this.inputChanged} checked={this.state.useScale}/> Scale by standard deviation<br/>Step Along Eigenvector<input type=\"number\" step=\"0.1\" onChange={this.inputChanged} name=\"stepBy\" value={this.state.stepBy} /></>\n        : null}\n\t<div style={{border: \"solid\", margin: \"auto\", width:\"600px\", height: \"600px\", justifyContent: \"center\", textAlign: \"center\"}} ref={ref => (this.mount = ref)}></div>\n\t  {this.state.eigenvectors.length > 0 ? <Eigenvector vector={this.state.eigenvectors[parseInt(this.state.modeNum)]}/> : null}<br/><br/>\n\t  \t<b>3DNA state:</b><table><tbody>{this.state.parameters3.map((value,index) => (<tr><td>{val3titles[index]}</td><td>{value[0].toFixed(5)}</td><td>{value[1].toFixed(5)}</td><td>{value[2].toFixed(5)}</td><td>{value[3].toFixed(5)}</td><td>{value[4].toFixed(5)}</td><td>{value[5].toFixed(5)}</td></tr>))}</tbody></table><br/><br/>\n\t  <u><b>PDB text file</b></u>\n\t  <pre>{this.state.pdbText}</pre><br/>\n\t  </div>\n\t  </>);\n  }\n\n}\n\nexport default DThree;\n","import React from 'react';\nimport DThree from '../DThree/DThree.jsx';\nimport * as ref from '../References/References.jsx';\nimport * as ref3 from '../References/References3DNA.jsx';\nimport Plot from 'react-plotly.js';\nimport \"./TetramerReader.css\";\nimport numeric from 'numeric';\n\nclass TetramerReader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: \"\",\n      selected: \"1\",\n      tetramer: \"\",\n      mean: {},\n      covariance: {},\n      items: [],\n      check1: false, check2: false, check3: false, check4: false,\n      plotItem: \"twist\",\n      analysis: [[], [], [], []],\n      analysisC: [[], [], [], []],\n      engaged: false,\n      layout: null,\n      data: null\n    };\n  }\n\n  engage = () => {\n    if (this.state.tetramer.length > 3) {\n      this.setState({\n        engaged: false\n      }, () => {\n        this.setState({\n          engaged: true\n        });\n      });\n    }\n  }\n  \n  analyzeData() {\n  \tlet source = [\n  \t\t[\"mean_TX3_3S_C1_cg_136.txt\", \"cov_TX3_3S_C1_cg_136.txt\"],\n  \t\t[\"mean_cgDNA_136.txt\", \"cov_cgDNA_136.txt\"],\n  \t\t[\"MD_mean_bstj_cgf_136.txt\", \"MD_cov_bstj_cgf_136.txt\"],\n  \t\t[\"mean_TX2_3S_C1_cg_136.txt\", \"cov_TX2_3S_C1_cg_136.txt\"]\n  \t];\n  \tlet currentAnalysis = [[], [], [], []];\n  \tlet currentAnalysisC = [[], [], [], []];\n  \tlet count = 0;\n    let count2 = 0;\n  \tsource.forEach((set, index) => {\n  \tlet dataSet = [];\n  \tlet dataSet2 = [];\n\tfetch(set[0]).then((r) => r.text()).then(text => {\n      let lines = text.split(\"\\n\");\n      let sumTwist = 0;\n      let sumTwist2 = 0;\n      lines.forEach(line => {\n        let litems = line.split(\" \");\n        if (litems.length < 31) return;\n\n        let steps = [];\n        for (let i = 0; i < 30; i++) {\n          steps.push(parseFloat(litems[i+1]));\n        }\n        \n        if (ref.complement(litems[0]) === litems[0]) sumTwist += steps[14]*11.4591559*ref.scale(steps[12], steps[13], steps[14]);\n        else sumTwist += 2*steps[14]*11.4591559*ref.scale(steps[12], steps[13], steps[14]);\n        \n        let points = ref.get30Coordinates(steps, litems[0], true);\n\t    let PhoW = ref.getAtomSets().atoms[1][1];\n\t    let PhoC = ref.getAtomSets().atoms[4][1];\n\t\tref3.getBasePlanes(ref.getAtomSets());\n        let stepParameters = ref3.getParameters();\n\n        if (ref.complement(litems[0]) === litems[0]) sumTwist2 += stepParameters[1][2];\n        else sumTwist2 += 2*stepParameters[1][2];\n\n\t\tlet midframe = ref.getMidFrame();\n\t\tlet px = PhoW.x - midframe[0][3];\n\t\tlet py = PhoW.y - midframe[1][3];\n\t\tlet pz = PhoW.z - midframe[2][3];\n\t\tlet pw = [\n\t\t\tpx*midframe[0][0]+py*midframe[1][0]+pz*midframe[2][0],\n\t\t\tpx*midframe[0][1]+py*midframe[1][1]+pz*midframe[2][1],\n\t\t\tpx*midframe[0][2]+py*midframe[1][2]+pz*midframe[2][2]\n\t\t];\n\t\tpx = PhoC.x - midframe[0][3];\n\t\tpy = PhoC.y - midframe[1][3];\n\t\tpz = PhoC.z - midframe[2][3];\t\n\t\tlet pc = [\n\t\t\tpx*midframe[0][0]+py*midframe[1][0]+pz*midframe[2][0],\n\t\t\tpx*midframe[0][1]+py*midframe[1][1]+pz*midframe[2][1],\n\t\t\tpx*midframe[0][2]+py*midframe[1][2]+pz*midframe[2][2]\n\t\t];\n\t\tlet dataItem = [litems[0], stepParameters[1][2], pw[0], pw[1], pw[2], pc[0], pc[1], pc[2], steps[14]*11.4591559*ref.scale(steps[12],steps[13],steps[14]), steps[12]*11.4591559*ref.scale(steps[12],steps[13],steps[14]), steps[13]*11.4591559*ref.scale(steps[12],steps[13],steps[14])];\n        dataSet.push(dataItem);\n      });\n      console.log(set[0] + \" twist = \" + sumTwist/256.0);\n      console.log(set[0] + \" twist 3DNA = \" + sumTwist2/256.0);\n      //console.log(JSON.stringify(dataSet));\n      currentAnalysis[index] = dataSet;\n\t  count++;\n\t  if (count === 4) {\n\t\tthis.setState({analysis: currentAnalysis});\t  \t\n\t  }\n    });\n\n    let lastitem = \"\";\n\tfetch(set[1]).then((r) => r.text()).then(text => {\n      let lines = text.split(\"\\n\");\n\n      let covT = [];\n      lines.forEach(line => {\n        let litems = line.split(\" \");\n        if (litems.length < 31) return;\n\n        if (litems[0] !== lastitem) {\n          if (lastitem !== \"\") {\n          \tlet eig = ref.jeigen(covT);\n          \tlet prod = 1;\n          \tfor (let i = 0; i < 30; i++) prod *= Math.sqrt(eig.eigenvalues[i]);\n          \tconsole.log(Math.sqrt(numeric.det(covT)) + \" \" + prod);\n\n          \tlet dataItem = [lastitem, prod];\n          \tdataSet2.push(dataItem);\n          \tcovT = [];\n          }\n          lastitem = litems[0];\n        }\n        let row = [];\n        for (let i = 0; i < 30; i++) {\n          row.push(parseFloat(litems[i+1]));\n        }\n        covT.push(row);\n      });\n      //console.log(covT);\n  \t  let eig = ref.jeigen(covT);\n  \t  let prod = 1;\n  \t  for (let i = 0; i < 30; i++) prod *= Math.sqrt(eig.eigenvalues[i]);\n  \t  let dataItem = [lastitem, prod];\n  \t  dataSet2.push(dataItem);\n  \t  currentAnalysisC[index] = dataSet2;\n      count2++;\n      console.log(count2);\n      if (count2 === 4) {\n      \tthis.setState({\n        \tanalysisC: currentAnalysisC\n        });\n      }\n    });\n    \n\n  \t});\n\n  \t//console.log(currentAnalysis);\n\n  }\n\n\n  clicked = () => {\n  \tthis.analyzeData();\n  }\n\n\n  inputChanged = (e) => {\n    const value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    this.setState({\n      [e.target.name]: value\n    });\n    if (e.target.name === \"tetramer\") this.engage();\n  };\n\n  loadSet = () => {\n    let f1 = \"\", f2 = \"\";\n    let itemsT = [];\n    let covarianceT = {};\n    let meanT = {};\n    let field = 'unknown';\n    if (parseInt(this.state.selected) === 1) {\n      f1 = process.env.PUBLIC_URL+\"mean_TX3_3S_C1_cg_136.txt\";\n      f2 = process.env.PUBLIC_URL+\"cov_TX3_3S_C1_cg_136.txt\";\n      field = \"TX3-S3-C1 X-ray analysis of protein-DNA structures\"\n    }\n    if (parseInt(this.state.selected) === 2) {\n      f1 = process.env.PUBLIC_URL+\"mean_cgDNA_136.txt\";\n      f2 = process.env.PUBLIC_URL+\"cov_cgDNA_136.txt\";\n      field = \"cgDNA+ model trained on MD palindrome library with AMBER parmbsc1\"\n    }\n    if (parseInt(this.state.selected) === 3) {\n      f1 = process.env.PUBLIC_URL+\"MD_mean_bstj_cgf_136.txt\";\n      f2 = process.env.PUBLIC_URL+\"MD_cov_bstj_cgf_136.txt\";\n      field = \"MD data directly from palindrome library with AMBER parmbsc1\"\n    }\n    if (parseInt(this.state.selected) === 4) {\n      f1 = process.env.PUBLIC_URL+\"mean_TX2_3S_C1_cg_136.txt\";\n      f2 = process.env.PUBLIC_URL+\"cov_TX2_3S_C1_cg_136.txt\";\n\t  field = \"TX2-S3-C1 X-ray analysis of protein-DNA structures\";\n    }\n    fetch(f1).then((r) => r.text()).then(text => {\n      let lines = text.split(\"\\n\");\n      lines.forEach(line => {\n        let litems = line.split(\" \");\n        if (litems.length < 31) return;\n        itemsT.push(litems[0]);\n        let steps = [];\n        for (let i = 0; i < 30; i++) {\n          steps.push(parseFloat(litems[i+1]));\n        }\n        \n        meanT[litems[0]] = steps;\n      });\n    });\n    fetch(f2).then((r) => r.text()).then(text => {\n      let lines = text.split(\"\\n\");\n      let lastitem = \"\";\n      lines.forEach(line => {\n        let litems = line.split(\" \");\n        if (litems.length < 31) return;\n        if (!itemsT.includes(litems[0])) {\n          alert(\"Step does not exist! \" + litems[0]);\n        }\n        if (litems[0] !== lastitem) {\n          covarianceT[litems[0]] = [];\n          lastitem = litems[0];\n        }\n        let row = [];\n        for (let i = 0; i < 30; i++) {\n          row.push(parseFloat(litems[i+1]));\n        }\n        covarianceT[litems[0]].push(row);\n      });\n      this.setState({\n        tetramer: itemsT[0],\n        items: itemsT,\n        covariance: covarianceT,\n        mean: meanT,\n        loaded: field\n      }, () => this.forceUpdate());\n      console.log(meanT);\n      console.log(covarianceT);\n      console.log(itemsT);\n    });\n\n  }\n  \n  makePlot = () => {\n  \tlet data = [];\n  \tlet names = [\"TX3\", \"cgDNA+\", \"MD\", \"TX2\"];\n  \tlet useData = [false, false, false, false];\n  \tlet labels = {\n  \t\t\"twist\": \"Twist in degrees\",\n  \t\t\"S\": \"log(configurational volume) (Å^(15/2)*(rad/5)^(15/2))\",\n  \t\t\"roll\": \"Roll in degrees\",\n  \t\t\"tilt\": \"Tilt in degrees\",\n  \t\t\"px\": \"xp of Watson phosphate (Å)\",\n  \t\t\"px2\": \"xp of Crick phosphate (Å)\",\n  \t\t\"py\": \"yp of Watson phosphate (Å)\",\n  \t\t\"py2\": \"yp of Crick phosphate (Å)\",\n  \t\t\"pz\": \"zp of Watson phosphate (Å)\",\n  \t\t\"pz2\": \"zp of Crick phosphate (Å)\"\n  \t}\n  \tif (this.state.check1) useData[0] = true;\n  \tif (this.state.check2) useData[1] = true;\n  \tif (this.state.check3) useData[2] = true;\n  \tif (this.state.check4) useData[3] = true;\n  \tif (!this.state.check1 && !this.state.check2 && !this.state.check3 && !this.state.check4) return;\n  \tlet min = 1000, max = -1000;\n\n  \tfor (let i = 0; i < 4; i++) {\n\n  \t\tif (useData[i]) {\n\t  \t  \tlet xvalues = [];\n \t \t\tlet yvalues = [];\n  \t\t\tlet max_diff = 0;\n  \t\t\tif (this.state.plotItem === \"S\") {\n  \t\t\t\tconsole.log(this.state.analysisC[i]);\n  \t\t\t\tthis.state.analysisC[i].forEach((value, index) => {\n  \t\t\t\t\txvalues.push(value[0]);\n  \t\t\t\t\tyvalues.push(Math.log(value[1])/Math.log(10));\n  \t\t\t\t\tif (Math.log(value[1])/Math.log(10) > max) max = Math.log(value[1])/Math.log(10);\n  \t\t\t\t\tif (Math.log(value[1])/Math.log(10) < min) min = Math.log(value[1])/Math.log(10);\n  \t\t\t\t});\n  \t\t\t} else this.state.analysis[i].forEach((value, index) => {\n\n  \t\t\t\txvalues.push(value[0]);\n  \t\t\t\tif (this.state.plotItem === \"tilt\") {\n  \t\t\t\t\tyvalues.push(value[9]);\n  \t\t\t\t\tif (value[9] > max) max = value[9];\n  \t\t\t\t\tif (value[9] < min) min = value[9];\n  \t\t\t\t}\n  \t\t\t\telse if (this.state.plotItem === \"roll\") {\n  \t\t\t\t\tyvalues.push(value[10]);\n  \t\t\t\t\tif (value[10] > max) max = value[10];\n  \t\t\t\t\tif (value[10] < min) min = value[10];\n  \t\t\t\t}\n  \t\t\t\telse if (this.state.plotItem === \"twist\") {\n  \t\t\t\t\tyvalues.push(value[1]);\n  \t\t\t\t\tif (value[1] > max) max = value[1];\n  \t\t\t\t\tif (value[1] < min) min = value[1];\n  \t\t\t\t\txvalues.push(value[0]);\n  \t\t\t\t\tyvalues.push(value[8]);\n  \t\t\t\t\tif (Math.abs(value[8]-value[1]) > max_diff) max_diff = Math.abs(value[8] - value[1]);\n  \t\t\t\t}\n  \t\t\t\telse if (this.state.plotItem === \"px\") {\n  \t\t\t\t\tyvalues.push(value[2]);\n  \t\t\t\t\tif (value[2] > max) max = value[2];\n  \t\t\t\t\tif (value[2] < min) min = value[2];\n  \t\t\t\t}\n  \t\t\t\telse if (this.state.plotItem === \"py\") {\n  \t\t\t\t\tyvalues.push(value[3]);\n  \t\t\t\t\tif (value[3] > max) max = value[3];\n  \t\t\t\t\tif (value[3] < min) min = value[3];\n  \t\t\t\t}\n  \t\t\t\telse if (this.state.plotItem === \"pz\") {\n  \t\t\t\t\tyvalues.push(value[4]);\n  \t\t\t\t\tif (value[4] > max) max = value[4];\n  \t\t\t\t\tif (value[4] < min) min = value[4];\n  \t\t\t\t}\n  \t\t\t\telse if (this.state.plotItem === \"px2\") {\n  \t\t\t\t\tyvalues.push(value[5]);\n  \t\t\t\t\tif (value[5] > max) max = value[5];\n  \t\t\t\t\tif (value[5] < min) min = value[5];\n  \t\t\t\t}\n  \t\t\t\telse if (this.state.plotItem === \"py2\") {\n  \t\t\t\t\tyvalues.push(value[6]);\n  \t\t\t\t\tif (value[6] > max) max = value[6];\n  \t\t\t\t\tif (value[6] < min) min = value[6];\n  \t\t\t\t}\n  \t\t\t\telse if (this.state.plotItem === \"pz2\") {\n  \t\t\t\t\tyvalues.push(value[7]);\n  \t\t\t\t\tif (value[7] > max) max = value[7];\n  \t\t\t\t\tif (value[7] < min) min = value[7];\n  \t\t\t\t}\n  \t\t\t});\n  \t\t\tdata.push({\n            \tx: xvalues,\n            \ty: yvalues,\n            \tname: names[i],\n            \ttype: 'scatter',\n            \tmode: 'markers+lines',\n            \tmarker: {\n            \t    size: 5,\n            \t    line: {\n                  \t\twidth: 2\n                \t}\n            \t}\n            });\n            console.log(max_diff);\n  \t\t}\n  \t}\n\n  \tlet dtick = 0.1;\n  \tif (max-min > 2) dtick = 0.25;\n  \tif (max-min > 4) dtick = 0.5;\n  \tif (max-min > 10) dtick = 1;\n  \tthis.setState({data: data,\n            layout: {\n              title: \"Comparison of Data Sets\",\n              width: 1080,\n              height: 800,\n              margin: {\n                b: 150\n              },\n              font: {\n                size: 18\n              },\n\t          xaxis: {\n                range: [0, 136],\n                //autorange: 'reversed',\n                showgrid: true,\n                showline: true,\n                gridwidth: 2,\n                gridcolor: '#777777',\n                //title: 'number of days before today',\n                automargin: true,\n                linewidth: 1\n              },\n              yaxis: {\n                range: [min-(max-min)/20.0, max+(max-min)/20.0],\n                showgrid: true,\n                showline: true,\n                dtick: dtick,\n                gridwidth: 2,\n                gridcolor: '#777777',\n                title: labels[this.state.plotItem],\n                linewidth: 1\n              }\n\t\t\t}\n\t});\n  }\n\n  clearData = () => {\n  \tthis.setState({analysis: [[],[],[],[]], layout: null});\n  }\n\n  render() {\n    return (<div>\n    \t  <div className=\"analyze-data\">\n    \t  <button onClick={this.clicked}>Collect Data</button>{this.state.analysis[0].length > 0 ? <><input type=\"checkbox\" name=\"check1\" checked={this.state.check1} onChange={this.inputChanged}/>TX-3 <input type=\"checkbox\" name=\"check2\" checked={this.state.check2} onChange={this.inputChanged}/>cgDNA+ <input type=\"checkbox\" name=\"check3\" checked={this.state.check3} onChange={this.inputChanged}/>MD <input type=\"checkbox\" name=\"check4\" checked={this.state.check4} onChange={this.inputChanged}/>TX-2 <select name=\"plotItem\" value={this.state.plotItem} onChange={this.inputChanged}>\n    \t  \t<option id=\"twist\" value=\"twist\" key=\"1\">Plot Twist</option>\n    \t  \t<option id=\"px\" value=\"px\" key=\"2\">Phosphate xp</option>\n    \t  \t<option id=\"py\" value=\"py\" key=\"3\">Phosphate yp</option>\n    \t  \t<option id=\"pz\" value=\"pz\" key=\"4\">Phosphate zp</option>\n    \t  \t<option id=\"px2\" value=\"px2\" key=\"5\">Phosphate xp (Crick)</option>\n    \t  \t<option id=\"py2\" value=\"py2\" key=\"6\">Phosphate yp (Crick)</option>\n    \t  \t<option id=\"pz2\" value=\"pz2\" key=\"7\">Phosphate zp (Crick)</option>\n    \t  \t<option id=\"tilt\" value=\"tilt\" key=\"8\">Tilt</option>\n    \t  \t<option id=\"roll\" value=\"roll\" key=\"9\">Roll</option>\n    \t  \t<option id=\"S\" value=\"S\" key=\"10\">S (config. volume)</option>\n    \t  </select><button onClick={this.makePlot}>Create Plot!</button></> : null}\n    \t  {this.state.layout ? <Plot layout={this.state.layout} data={this.state.data} /> : null} <button onClick={this.clearData}>Clear Data and Plots</button>\n    \t  </div>\n          <br/>{this.state.loaded}<br/><br/>\n          <select name=\"selected\" value={this.state.selected} onChange={this.inputChanged}>\n            <option id=\"1\" value=\"1\" key=\"1\">TX3 X-ray</option>\n            <option id=\"2\" value=\"2\" key=\"2\">cgDNA+ 136</option>\n            <option id=\"3\" value=\"3\" key=\"3\">MD</option>\n            <option id=\"4\" value=\"4\" key=\"4\">TX2 X-ray</option>\n          </select>\n          <button onClick={this.loadSet}>Load Dataset</button>\n          <select name=\"tetramer\" value={this.state.tetramer} onChange={this.inputChanged}>\n            {this.state.items.length > 0 ? this.state.items.map((name) => (\n              <option key={name} value={name}>{name}</option>\n            )) : null}\n          </select>\n          <button onClick={this.engage}>Run</button>\n          {this.state.engaged ? <DThree mean={this.state.mean[this.state.tetramer]} cov={this.state.covariance[this.state.tetramer]} tetramer={this.state.tetramer}/> : null}\n          </div>\n        )\n  }\n}\n\nexport default TetramerReader;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport TetramerReader from './components/TetramerReader/TetramerReader.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<React.StrictMode><TetramerReader/></React.StrictMode>, \n\tdocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}